cmake_minimum_required(VERSION 3.13)

function(remake_project name)
  set(v 0)
  foreach(arg IN LISTS ARGN)
    if (arg STREQUAL "VERSION")
      set(v "")
    elseif (NOT v)
      string(REPLACE "1:" "" v "${arg}")
    endif()
  endforeach()
  project(${name} LANGUAGES C VERSION ${v})
endfunction()

function(remake_add_directories)
  if (NOT ARGN)
    file(GLOB ARGN RELATIVE "${CMAKE_CURRENT_LIST_DIR}" "*")
  endif ()
  set(skip)
  foreach(arg IN LISTS ARGN)
    if (skip)
      set(skip)
    elseif (arg STREQUAL "COMPONENT")
      set(skip TRUE)
    elseif (IS_DIRECTORY "${CMAKE_CURRENT_LIST_DIR}/${arg}")
      add_subdirectory("${arg}")
    endif()
  endforeach()
endfunction()

function(remake_add_library name)
  string(REPLACE "${CMAKE_PROJECT_NAME}-" "" bname ${name})
  set(name "${CMAKE_PROJECT_NAME}-${bname}")

  set(files)
  set(libs)
  set(mode "")
  foreach(arg IN LISTS ARGN)
	if (mode STREQUAL "PREFIX")
	  set(mode "")
    elseif (arg MATCHES "[A-Z_]+")
      set(mode "${arg}")
    elseif (mode STREQUAL "LINK")
      string(REPLACE "${CMAKE_PROJECT_NAME}-" "" arg ${arg})
      list(APPEND libs ${CMAKE_PROJECT_NAME}-${arg})
	else()
	  list(APPEND files ${arg})
    endif()
  endforeach()

  if (NOT files)
	set(files *.c)
  endif()
  set(srcs)
  foreach (pat IN LISTS files)
	file(GLOB files RELATIVE "${CMAKE_CURRENT_LIST_DIR}" "${pat}")
	list(APPEND srcs ${files})
  endforeach()
  add_library(${name} ${srcs})
  target_link_libraries(${name} PUBLIC ${libs})
  target_include_directories(${name} PRIVATE ..)
  target_include_directories(${name} INTERFACE ${CMAKE_INSTALL_PREFIX}/include/${CMAKE_PROJECT_NAME})
  install(TARGETS ${name} EXPORT ${CMAKE_PROJECT_NAME} DESTINATION lib)
endfunction()

function(remake_add_executables)
  file(GLOB files RELATIVE "${CMAKE_CURRENT_LIST_DIR}" "*.c")
  foreach(file IN LISTS files)
    string(REPLACE ".c" "" name ${file})
    set(name "${CMAKE_PROJECT_NAME}-${name}")
    add_executable(${name} ${file})
    target_include_directories(${name} PRIVATE ../lib)
    target_include_directories(${name} PRIVATE ../../lib)
  endforeach()
  set(mode "")
  foreach(arg IN LISTS ARGN)
    if (arg MATCHES "[A-Z_]+")
      set(mode "${arg}")
    elseif (mode STREQUAL "LINK")
      foreach(file IN LISTS files)
        string(REPLACE ".c" "" name ${file})
        set(name "${CMAKE_PROJECT_NAME}-${name}")
        string(REPLACE "${CMAKE_PROJECT_NAME}-" "" arg ${arg})
        target_link_libraries(${name} PRIVATE ${CMAKE_PROJECT_NAME}-${arg})
      endforeach()
    endif()
  endforeach()
endfunction()

function(remake_add_files mode dir)
  if (mode STREQUAL "INSTALL")
    foreach(arg IN LISTS ARGN)
      file(GLOB files "${arg}")
      install(FILES ${files} DESTINATION ${dir})
    endforeach()
  else ()
    message(FATAL_ERROR "unknown mode")
  endif()
endfunction()

function(remake_add_headers)
  set(mode "${ARGV0}")
  file(GLOB files RELATIVE "${CMAKE_CURRENT_LIST_DIR}" "*.h")
  if (ARGC EQUAL 0)
    install(FILES ${files} DESTINATION include/${CMAKE_PROJECT_NAME})
  elseif (mode STREQUAL "INSTALL")
    install(FILES ${files} DESTINATION include/${CMAKE_PROJECT_NAME}/${ARGV1})
  else ()
    message(FATAL_ERROR "unknown mode: ${mode}")
  endif()
endfunction()

foreach (name IN ITEMS doc file_configure pack_deb distribute_deb include
                       pkg_config_generate find_package find_library)
  function(remake_${name})
  endfunction()
endforeach()
